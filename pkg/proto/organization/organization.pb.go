// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.0
// source: organization/organization.proto

package organization

import (
	context "context"
	common "github.com/OpenIMSDK/chat/pkg/proto/common"
	sdkws "github.com/OpenIMSDK/protocol/sdkws"
	wrapperspb "github.com/OpenIMSDK/protocol/wrapperspb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrganizationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoURL      string `protobuf:"bytes,1,opt,name=logoURL,proto3" json:"logoURL"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Homepage     string `protobuf:"bytes,3,opt,name=homepage,proto3" json:"homepage"`
	Introduction string `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction"`
	CreateTime   int64  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime"`
}

func (x *OrganizationInfo) Reset() {
	*x = OrganizationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationInfo) ProtoMessage() {}

func (x *OrganizationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationInfo.ProtoReflect.Descriptor instead.
func (*OrganizationInfo) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{0}
}

func (x *OrganizationInfo) GetLogoURL() string {
	if x != nil {
		return x.LogoURL
	}
	return ""
}

func (x *OrganizationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrganizationInfo) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *OrganizationInfo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *OrganizationInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type Department struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID       string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	FaceURL            string `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL"`
	Name               string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	ParentDepartmentID string `protobuf:"bytes,4,opt,name=parentDepartmentID,proto3" json:"parentDepartmentID"`
	Order              int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order"`
	CreateTime         int64  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
}

func (x *Department) Reset() {
	*x = Department{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Department) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Department) ProtoMessage() {}

func (x *Department) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Department.ProtoReflect.Descriptor instead.
func (*Department) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{1}
}

func (x *Department) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *Department) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *Department) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Department) GetParentDepartmentID() string {
	if x != nil {
		return x.ParentDepartmentID
	}
	return ""
}

func (x *Department) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Department) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type DepartmentNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID       string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	FaceURL            string `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL"`
	Name               string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	ParentDepartmentID string `protobuf:"bytes,4,opt,name=parentDepartmentID,proto3" json:"parentDepartmentID"`
	Order              int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order"`
	CreateTime         int64  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
	MemberNum          uint32 `protobuf:"varint,7,opt,name=memberNum,proto3" json:"memberNum"`
}

func (x *DepartmentNum) Reset() {
	*x = DepartmentNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentNum) ProtoMessage() {}

func (x *DepartmentNum) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentNum.ProtoReflect.Descriptor instead.
func (*DepartmentNum) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{2}
}

func (x *DepartmentNum) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *DepartmentNum) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *DepartmentNum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DepartmentNum) GetParentDepartmentID() string {
	if x != nil {
		return x.ParentDepartmentID
	}
	return ""
}

func (x *DepartmentNum) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *DepartmentNum) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *DepartmentNum) GetMemberNum() uint32 {
	if x != nil {
		return x.MemberNum
	}
	return 0
}

type DepartmentMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID    string `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
	Position        string `protobuf:"bytes,3,opt,name=position,proto3" json:"position"`
	Station         string `protobuf:"bytes,4,opt,name=station,proto3" json:"station"`
	Order           int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order"`
	EntryTime       int64  `protobuf:"varint,6,opt,name=entryTime,proto3" json:"entryTime"`
	TerminationTime int64  `protobuf:"varint,7,opt,name=terminationTime,proto3" json:"terminationTime"`
	CreateTime      int64  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime"`
}

func (x *DepartmentMember) Reset() {
	*x = DepartmentMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentMember) ProtoMessage() {}

func (x *DepartmentMember) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentMember.ProtoReflect.Descriptor instead.
func (*DepartmentMember) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{3}
}

func (x *DepartmentMember) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DepartmentMember) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *DepartmentMember) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *DepartmentMember) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

func (x *DepartmentMember) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *DepartmentMember) GetEntryTime() int64 {
	if x != nil {
		return x.EntryTime
	}
	return 0
}

func (x *DepartmentMember) GetTerminationTime() int64 {
	if x != nil {
		return x.TerminationTime
	}
	return 0
}

func (x *DepartmentMember) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type DepartmentMemberUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *common.UserFullInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	Members []*MemberDepartment  `protobuf:"bytes,2,rep,name=members,proto3" json:"members"`
}

func (x *DepartmentMemberUser) Reset() {
	*x = DepartmentMemberUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentMemberUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentMemberUser) ProtoMessage() {}

func (x *DepartmentMemberUser) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentMemberUser.ProtoReflect.Descriptor instead.
func (*DepartmentMemberUser) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{4}
}

func (x *DepartmentMemberUser) GetUser() *common.UserFullInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *DepartmentMemberUser) GetMembers() []*MemberDepartment {
	if x != nil {
		return x.Members
	}
	return nil
}

type MemberDepartment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string         `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID    string         `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
	Position        string         `protobuf:"bytes,3,opt,name=position,proto3" json:"position"`
	Station         string         `protobuf:"bytes,4,opt,name=station,proto3" json:"station"`
	Order           int32          `protobuf:"varint,5,opt,name=order,proto3" json:"order"`
	EntryTime       int64          `protobuf:"varint,6,opt,name=entryTime,proto3" json:"entryTime"`
	TerminationTime int64          `protobuf:"varint,7,opt,name=terminationTime,proto3" json:"terminationTime"`
	CreateTime      int64          `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime"`
	Department      *DepartmentNum `protobuf:"bytes,9,opt,name=department,proto3" json:"department"`
}

func (x *MemberDepartment) Reset() {
	*x = MemberDepartment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberDepartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberDepartment) ProtoMessage() {}

func (x *MemberDepartment) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberDepartment.ProtoReflect.Descriptor instead.
func (*MemberDepartment) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{5}
}

func (x *MemberDepartment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MemberDepartment) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *MemberDepartment) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *MemberDepartment) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

func (x *MemberDepartment) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *MemberDepartment) GetEntryTime() int64 {
	if x != nil {
		return x.EntryTime
	}
	return 0
}

func (x *MemberDepartment) GetTerminationTime() int64 {
	if x != nil {
		return x.TerminationTime
	}
	return 0
}

func (x *MemberDepartment) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MemberDepartment) GetDepartment() *DepartmentNum {
	if x != nil {
		return x.Department
	}
	return nil
}

type DepartmentMemberFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string               `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID    string               `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
	Position        string               `protobuf:"bytes,3,opt,name=position,proto3" json:"position"`
	EntryTime       int64                `protobuf:"varint,4,opt,name=entryTime,proto3" json:"entryTime"`
	TerminationTime int64                `protobuf:"varint,5,opt,name=terminationTime,proto3" json:"terminationTime"`
	CreateTime      int64                `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
	Department      *DepartmentNum       `protobuf:"bytes,7,opt,name=department,proto3" json:"department"`
	User            *common.UserFullInfo `protobuf:"bytes,8,opt,name=user,proto3" json:"user"`
}

func (x *DepartmentMemberFull) Reset() {
	*x = DepartmentMemberFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentMemberFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentMemberFull) ProtoMessage() {}

func (x *DepartmentMemberFull) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentMemberFull.ProtoReflect.Descriptor instead.
func (*DepartmentMemberFull) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{6}
}

func (x *DepartmentMemberFull) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DepartmentMemberFull) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *DepartmentMemberFull) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *DepartmentMemberFull) GetEntryTime() int64 {
	if x != nil {
		return x.EntryTime
	}
	return 0
}

func (x *DepartmentMemberFull) GetTerminationTime() int64 {
	if x != nil {
		return x.TerminationTime
	}
	return 0
}

func (x *DepartmentMemberFull) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *DepartmentMemberFull) GetDepartment() *DepartmentNum {
	if x != nil {
		return x.Department
	}
	return nil
}

func (x *DepartmentMemberFull) GetUser() *common.UserFullInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type UserInDepartment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Departments []*DepartmentMember `protobuf:"bytes,1,rep,name=departments,proto3" json:"departments"`
}

func (x *UserInDepartment) Reset() {
	*x = UserInDepartment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInDepartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInDepartment) ProtoMessage() {}

func (x *UserInDepartment) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInDepartment.ProtoReflect.Descriptor instead.
func (*UserInDepartment) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{7}
}

func (x *UserInDepartment) GetDepartments() []*DepartmentMember {
	if x != nil {
		return x.Departments
	}
	return nil
}

type CreateDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID       string                 `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	FaceURL            string                 `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL"`
	Name               string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	ParentDepartmentID string                 `protobuf:"bytes,4,opt,name=parentDepartmentID,proto3" json:"parentDepartmentID"`
	Order              *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=order,proto3" json:"order"`
}

func (x *CreateDepartmentReq) Reset() {
	*x = CreateDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentReq) ProtoMessage() {}

func (x *CreateDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentReq.ProtoReflect.Descriptor instead.
func (*CreateDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *CreateDepartmentReq) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *CreateDepartmentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDepartmentReq) GetParentDepartmentID() string {
	if x != nil {
		return x.ParentDepartmentID
	}
	return ""
}

func (x *CreateDepartmentReq) GetOrder() *wrapperspb.Int32Value {
	if x != nil {
		return x.Order
	}
	return nil
}

type CreateDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *CreateDepartmentResp) Reset() {
	*x = CreateDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentResp) ProtoMessage() {}

func (x *CreateDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentResp.ProtoReflect.Descriptor instead.
func (*CreateDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDepartmentResp) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type UpdateDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID       string                  `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	FaceURL            *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL"`
	Name               *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	ParentDepartmentID *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=parentDepartmentID,proto3" json:"parentDepartmentID"`
	Order              *wrapperspb.Int32Value  `protobuf:"bytes,5,opt,name=order,proto3" json:"order"`
}

func (x *UpdateDepartmentReq) Reset() {
	*x = UpdateDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepartmentReq) ProtoMessage() {}

func (x *UpdateDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepartmentReq.ProtoReflect.Descriptor instead.
func (*UpdateDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *UpdateDepartmentReq) GetFaceURL() *wrapperspb.StringValue {
	if x != nil {
		return x.FaceURL
	}
	return nil
}

func (x *UpdateDepartmentReq) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateDepartmentReq) GetParentDepartmentID() *wrapperspb.StringValue {
	if x != nil {
		return x.ParentDepartmentID
	}
	return nil
}

func (x *UpdateDepartmentReq) GetOrder() *wrapperspb.Int32Value {
	if x != nil {
		return x.Order
	}
	return nil
}

type UpdateDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDepartmentResp) Reset() {
	*x = UpdateDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepartmentResp) ProtoMessage() {}

func (x *UpdateDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepartmentResp.ProtoReflect.Descriptor instead.
func (*UpdateDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{11}
}

type GetOrganizationDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrganizationDepartmentReq) Reset() {
	*x = GetOrganizationDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationDepartmentReq) ProtoMessage() {}

func (x *GetOrganizationDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetOrganizationDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{12}
}

type DepartmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Department     *DepartmentNum    `protobuf:"bytes,1,opt,name=department,proto3" json:"department"`
	Subdepartments []*DepartmentInfo `protobuf:"bytes,2,rep,name=subdepartments,proto3" json:"subdepartments"`
}

func (x *DepartmentInfo) Reset() {
	*x = DepartmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentInfo) ProtoMessage() {}

func (x *DepartmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentInfo.ProtoReflect.Descriptor instead.
func (*DepartmentInfo) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{13}
}

func (x *DepartmentInfo) GetDepartment() *DepartmentNum {
	if x != nil {
		return x.Department
	}
	return nil
}

func (x *DepartmentInfo) GetSubdepartments() []*DepartmentInfo {
	if x != nil {
		return x.Subdepartments
	}
	return nil
}

type GetOrganizationDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Departments []*DepartmentInfo `protobuf:"bytes,1,rep,name=departments,proto3" json:"departments"`
}

func (x *GetOrganizationDepartmentResp) Reset() {
	*x = GetOrganizationDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationDepartmentResp) ProtoMessage() {}

func (x *GetOrganizationDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetOrganizationDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{14}
}

func (x *GetOrganizationDepartmentResp) GetDepartments() []*DepartmentInfo {
	if x != nil {
		return x.Departments
	}
	return nil
}

type DeleteDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentIDs []string `protobuf:"bytes,1,rep,name=departmentIDs,proto3" json:"departmentIDs"`
}

func (x *DeleteDepartmentReq) Reset() {
	*x = DeleteDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepartmentReq) ProtoMessage() {}

func (x *DeleteDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepartmentReq.ProtoReflect.Descriptor instead.
func (*DeleteDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteDepartmentReq) GetDepartmentIDs() []string {
	if x != nil {
		return x.DepartmentIDs
	}
	return nil
}

type DeleteDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDepartmentResp) Reset() {
	*x = DeleteDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepartmentResp) ProtoMessage() {}

func (x *DeleteDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepartmentResp.ProtoReflect.Descriptor instead.
func (*DeleteDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{16}
}

type GetDepartmentParentIDListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *GetDepartmentParentIDListReq) Reset() {
	*x = GetDepartmentParentIDListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentParentIDListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentParentIDListReq) ProtoMessage() {}

func (x *GetDepartmentParentIDListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentParentIDListReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentParentIDListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{17}
}

func (x *GetDepartmentParentIDListReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type GetDepartmentParentIDListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentIDList []string `protobuf:"bytes,1,rep,name=parentIDList,proto3" json:"parentIDList"`
}

func (x *GetDepartmentParentIDListResp) Reset() {
	*x = GetDepartmentParentIDListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentParentIDListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentParentIDListResp) ProtoMessage() {}

func (x *GetDepartmentParentIDListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentParentIDListResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentParentIDListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{18}
}

func (x *GetDepartmentParentIDListResp) GetParentIDList() []string {
	if x != nil {
		return x.ParentIDList
	}
	return nil
}

type CreateDepartmentMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID    string `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
	Position        string `protobuf:"bytes,3,opt,name=position,proto3" json:"position"`
	Station         string `protobuf:"bytes,4,opt,name=station,proto3" json:"station"`
	Order           int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order"`
	EntryTime       int64  `protobuf:"varint,6,opt,name=entryTime,proto3" json:"entryTime"`
	TerminationTime int64  `protobuf:"varint,7,opt,name=terminationTime,proto3" json:"terminationTime"`
}

func (x *CreateDepartmentMemberReq) Reset() {
	*x = CreateDepartmentMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentMemberReq) ProtoMessage() {}

func (x *CreateDepartmentMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentMemberReq.ProtoReflect.Descriptor instead.
func (*CreateDepartmentMemberReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{19}
}

func (x *CreateDepartmentMemberReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateDepartmentMemberReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *CreateDepartmentMemberReq) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *CreateDepartmentMemberReq) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

func (x *CreateDepartmentMemberReq) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CreateDepartmentMemberReq) GetEntryTime() int64 {
	if x != nil {
		return x.EntryTime
	}
	return 0
}

func (x *CreateDepartmentMemberReq) GetTerminationTime() int64 {
	if x != nil {
		return x.TerminationTime
	}
	return 0
}

type CreateDepartmentMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDepartmentMemberResp) Reset() {
	*x = CreateDepartmentMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentMemberResp) ProtoMessage() {}

func (x *CreateDepartmentMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentMemberResp.ProtoReflect.Descriptor instead.
func (*CreateDepartmentMemberResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{20}
}

type GetUserInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []string `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs"`
}

func (x *GetUserInDepartmentReq) Reset() {
	*x = GetUserInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInDepartmentReq) ProtoMessage() {}

func (x *GetUserInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetUserInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserInDepartmentReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type GetUserInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*DepartmentMemberUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users"`
}

func (x *GetUserInDepartmentResp) Reset() {
	*x = GetUserInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInDepartmentResp) ProtoMessage() {}

func (x *GetUserInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetUserInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserInDepartmentResp) GetUsers() []*DepartmentMemberUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type UpdateUserInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string                  `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID    string                  `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
	Position        *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=position,proto3" json:"position"`
	Station         *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=station,proto3" json:"station"`
	Order           *wrapperspb.Int32Value  `protobuf:"bytes,5,opt,name=order,proto3" json:"order"`
	EntryTime       *wrapperspb.Int64Value  `protobuf:"bytes,6,opt,name=entryTime,proto3" json:"entryTime"`
	TerminationTime *wrapperspb.Int64Value  `protobuf:"bytes,7,opt,name=terminationTime,proto3" json:"terminationTime"`
}

func (x *UpdateUserInDepartmentReq) Reset() {
	*x = UpdateUserInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInDepartmentReq) ProtoMessage() {}

func (x *UpdateUserInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInDepartmentReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateUserInDepartmentReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateUserInDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *UpdateUserInDepartmentReq) GetPosition() *wrapperspb.StringValue {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *UpdateUserInDepartmentReq) GetStation() *wrapperspb.StringValue {
	if x != nil {
		return x.Station
	}
	return nil
}

func (x *UpdateUserInDepartmentReq) GetOrder() *wrapperspb.Int32Value {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *UpdateUserInDepartmentReq) GetEntryTime() *wrapperspb.Int64Value {
	if x != nil {
		return x.EntryTime
	}
	return nil
}

func (x *UpdateUserInDepartmentReq) GetTerminationTime() *wrapperspb.Int64Value {
	if x != nil {
		return x.TerminationTime
	}
	return nil
}

type UpdateUserInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserInDepartmentResp) Reset() {
	*x = UpdateUserInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInDepartmentResp) ProtoMessage() {}

func (x *UpdateUserInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInDepartmentResp.ProtoReflect.Descriptor instead.
func (*UpdateUserInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{24}
}

type DeleteUserInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID string `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *DeleteUserInDepartmentReq) Reset() {
	*x = DeleteUserInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInDepartmentReq) ProtoMessage() {}

func (x *DeleteUserInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInDepartmentReq.ProtoReflect.Descriptor instead.
func (*DeleteUserInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteUserInDepartmentReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteUserInDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type DeleteUserInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserInDepartmentResp) Reset() {
	*x = DeleteUserInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInDepartmentResp) ProtoMessage() {}

func (x *DeleteUserInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInDepartmentResp.ProtoReflect.Descriptor instead.
func (*DeleteUserInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{26}
}

type GetDepartmentRelatedGroupIDListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentIDList []string `protobuf:"bytes,1,rep,name=departmentIDList,proto3" json:"departmentIDList"`
}

func (x *GetDepartmentRelatedGroupIDListReq) Reset() {
	*x = GetDepartmentRelatedGroupIDListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentRelatedGroupIDListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentRelatedGroupIDListReq) ProtoMessage() {}

func (x *GetDepartmentRelatedGroupIDListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentRelatedGroupIDListReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentRelatedGroupIDListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{27}
}

func (x *GetDepartmentRelatedGroupIDListReq) GetDepartmentIDList() []string {
	if x != nil {
		return x.DepartmentIDList
	}
	return nil
}

type GetDepartmentRelatedGroupIDListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupIDList []string `protobuf:"bytes,1,rep,name=groupIDList,proto3" json:"groupIDList"`
}

func (x *GetDepartmentRelatedGroupIDListResp) Reset() {
	*x = GetDepartmentRelatedGroupIDListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentRelatedGroupIDListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentRelatedGroupIDListResp) ProtoMessage() {}

func (x *GetDepartmentRelatedGroupIDListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentRelatedGroupIDListResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentRelatedGroupIDListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{28}
}

func (x *GetDepartmentRelatedGroupIDListResp) GetGroupIDList() []string {
	if x != nil {
		return x.GroupIDList
	}
	return nil
}

type GetUserInOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDList []string `protobuf:"bytes,1,rep,name=userIDList,proto3" json:"userIDList"`
}

func (x *GetUserInOrganizationReq) Reset() {
	*x = GetUserInOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInOrganizationReq) ProtoMessage() {}

func (x *GetUserInOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInOrganizationReq.ProtoReflect.Descriptor instead.
func (*GetUserInOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserInOrganizationReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

type GetUserInOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*common.UserFullInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users"`
}

func (x *GetUserInOrganizationResp) Reset() {
	*x = GetUserInOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInOrganizationResp) ProtoMessage() {}

func (x *GetUserInOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInOrganizationResp.ProtoReflect.Descriptor instead.
func (*GetUserInOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{30}
}

func (x *GetUserInOrganizationResp) GetUsers() []*common.UserFullInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetCompleteOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCompleteOrganizationReq) Reset() {
	*x = GetCompleteOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompleteOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompleteOrganizationReq) ProtoMessage() {}

func (x *GetCompleteOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompleteOrganizationReq.ProtoReflect.Descriptor instead.
func (*GetCompleteOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{31}
}

type CompleteOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeopleNumber   uint32                  `protobuf:"varint,1,opt,name=peopleNumber,proto3" json:"peopleNumber"`
	List           []*CompleteOrganization `protobuf:"bytes,2,rep,name=list,proto3" json:"list"`
	DepartmentID   string                  `protobuf:"bytes,3,opt,name=departmentID,proto3" json:"departmentID"`
	FaceURL        string                  `protobuf:"bytes,4,opt,name=faceURL,proto3" json:"faceURL"`
	Name           string                  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	ParentID       string                  `protobuf:"bytes,6,opt,name=parentID,proto3" json:"parentID"`
	Order          int32                   `protobuf:"varint,7,opt,name=order,proto3" json:"order"`
	DepartmentType int32                   `protobuf:"varint,8,opt,name=departmentType,proto3" json:"departmentType"`
	CreateTime     uint32                  `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime"`
	Ex             string                  `protobuf:"bytes,10,opt,name=ex,proto3" json:"ex"`
}

func (x *CompleteOrganization) Reset() {
	*x = CompleteOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrganization) ProtoMessage() {}

func (x *CompleteOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrganization.ProtoReflect.Descriptor instead.
func (*CompleteOrganization) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{32}
}

func (x *CompleteOrganization) GetPeopleNumber() uint32 {
	if x != nil {
		return x.PeopleNumber
	}
	return 0
}

func (x *CompleteOrganization) GetList() []*CompleteOrganization {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CompleteOrganization) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *CompleteOrganization) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *CompleteOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompleteOrganization) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *CompleteOrganization) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CompleteOrganization) GetDepartmentType() int32 {
	if x != nil {
		return x.DepartmentType
	}
	return 0
}

func (x *CompleteOrganization) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CompleteOrganization) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type GetCompleteOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CompleteOrganization `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetCompleteOrganizationResp) Reset() {
	*x = GetCompleteOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompleteOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompleteOrganizationResp) ProtoMessage() {}

func (x *GetCompleteOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompleteOrganizationResp.ProtoReflect.Descriptor instead.
func (*GetCompleteOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{33}
}

func (x *GetCompleteOrganizationResp) GetList() []*CompleteOrganization {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUsersInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDList []string `protobuf:"bytes,1,rep,name=userIDList,proto3" json:"userIDList"`
}

func (x *GetUsersInDepartmentReq) Reset() {
	*x = GetUsersInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInDepartmentReq) ProtoMessage() {}

func (x *GetUsersInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetUsersInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{34}
}

func (x *GetUsersInDepartmentReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

type GetUsersInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserInDepartment `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetUsersInDepartmentResp) Reset() {
	*x = GetUsersInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInDepartmentResp) ProtoMessage() {}

func (x *GetUsersInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetUsersInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{35}
}

func (x *GetUsersInDepartmentResp) GetList() []*UserInDepartment {
	if x != nil {
		return x.List
	}
	return nil
}

type SetOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoURL      *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=logoURL,proto3" json:"logoURL"`
	Name         *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Homepage     *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=homepage,proto3" json:"homepage"`
	Introduction *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction"`
}

func (x *SetOrganizationReq) Reset() {
	*x = SetOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrganizationReq) ProtoMessage() {}

func (x *SetOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrganizationReq.ProtoReflect.Descriptor instead.
func (*SetOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{36}
}

func (x *SetOrganizationReq) GetLogoURL() *wrapperspb.StringValue {
	if x != nil {
		return x.LogoURL
	}
	return nil
}

func (x *SetOrganizationReq) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *SetOrganizationReq) GetHomepage() *wrapperspb.StringValue {
	if x != nil {
		return x.Homepage
	}
	return nil
}

func (x *SetOrganizationReq) GetIntroduction() *wrapperspb.StringValue {
	if x != nil {
		return x.Introduction
	}
	return nil
}

type SetOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetOrganizationResp) Reset() {
	*x = SetOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrganizationResp) ProtoMessage() {}

func (x *SetOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrganizationResp.ProtoReflect.Descriptor instead.
func (*SetOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{37}
}

type GetOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrganizationReq) Reset() {
	*x = GetOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationReq) ProtoMessage() {}

func (x *GetOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationReq.ProtoReflect.Descriptor instead.
func (*GetOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{38}
}

type GetOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoURL      string `protobuf:"bytes,1,opt,name=logoURL,proto3" json:"logoURL"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Homepage     string `protobuf:"bytes,3,opt,name=homepage,proto3" json:"homepage"`
	Introduction string `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction"`
	CreateTime   int64  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime"`
}

func (x *GetOrganizationResp) Reset() {
	*x = GetOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationResp) ProtoMessage() {}

func (x *GetOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationResp.ProtoReflect.Descriptor instead.
func (*GetOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{39}
}

func (x *GetOrganizationResp) GetLogoURL() string {
	if x != nil {
		return x.LogoURL
	}
	return ""
}

func (x *GetOrganizationResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOrganizationResp) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *GetOrganizationResp) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GetOrganizationResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetSubDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *GetSubDepartmentReq) Reset() {
	*x = GetSubDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentReq) ProtoMessage() {}

func (x *GetSubDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{40}
}

func (x *GetSubDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type MemberUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member   *DepartmentMember    `protobuf:"bytes,1,opt,name=member,proto3" json:"member"`
	User     *common.UserFullInfo `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
	Disabled bool                 `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled"`
}

func (x *MemberUserInfo) Reset() {
	*x = MemberUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberUserInfo) ProtoMessage() {}

func (x *MemberUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberUserInfo.ProtoReflect.Descriptor instead.
func (*MemberUserInfo) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{41}
}

func (x *MemberUserInfo) GetMember() *DepartmentMember {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *MemberUserInfo) GetUser() *common.UserFullInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MemberUserInfo) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type GetSubDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Departments []*DepartmentNum  `protobuf:"bytes,1,rep,name=departments,proto3" json:"departments"`
	Members     []*MemberUserInfo `protobuf:"bytes,2,rep,name=members,proto3" json:"members"`
	Parents     []*DepartmentNum  `protobuf:"bytes,3,rep,name=parents,proto3" json:"parents"`
	Current     *DepartmentNum    `protobuf:"bytes,4,opt,name=current,proto3" json:"current"`
}

func (x *GetSubDepartmentResp) Reset() {
	*x = GetSubDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentResp) ProtoMessage() {}

func (x *GetSubDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{42}
}

func (x *GetSubDepartmentResp) GetDepartments() []*DepartmentNum {
	if x != nil {
		return x.Departments
	}
	return nil
}

func (x *GetSubDepartmentResp) GetMembers() []*MemberUserInfo {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GetSubDepartmentResp) GetParents() []*DepartmentNum {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *GetSubDepartmentResp) GetCurrent() *DepartmentNum {
	if x != nil {
		return x.Current
	}
	return nil
}

type GetSearchDepartmentUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string                   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword"`
	Pagination *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
}

func (x *GetSearchDepartmentUserReq) Reset() {
	*x = GetSearchDepartmentUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchDepartmentUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchDepartmentUserReq) ProtoMessage() {}

func (x *GetSearchDepartmentUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchDepartmentUserReq.ProtoReflect.Descriptor instead.
func (*GetSearchDepartmentUserReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{43}
}

func (x *GetSearchDepartmentUserReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetSearchDepartmentUserReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetSearchDepartmentUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Users []*DepartmentMemberUser `protobuf:"bytes,2,rep,name=users,proto3" json:"users"`
}

func (x *GetSearchDepartmentUserResp) Reset() {
	*x = GetSearchDepartmentUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchDepartmentUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchDepartmentUserResp) ProtoMessage() {}

func (x *GetSearchDepartmentUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchDepartmentUserResp.ProtoReflect.Descriptor instead.
func (*GetSearchDepartmentUserResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{44}
}

func (x *GetSearchDepartmentUserResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSearchDepartmentUserResp) GetUsers() []*DepartmentMemberUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type SortDepartmentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID     string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	NextDepartmentID string `protobuf:"bytes,2,opt,name=nextDepartmentID,proto3" json:"nextDepartmentID"`
}

func (x *SortDepartmentListReq) Reset() {
	*x = SortDepartmentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortDepartmentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortDepartmentListReq) ProtoMessage() {}

func (x *SortDepartmentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortDepartmentListReq.ProtoReflect.Descriptor instead.
func (*SortDepartmentListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{45}
}

func (x *SortDepartmentListReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *SortDepartmentListReq) GetNextDepartmentID() string {
	if x != nil {
		return x.NextDepartmentID
	}
	return ""
}

type SortDepartmentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order int32 `protobuf:"varint,1,opt,name=order,proto3" json:"order"`
}

func (x *SortDepartmentListResp) Reset() {
	*x = SortDepartmentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortDepartmentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortDepartmentListResp) ProtoMessage() {}

func (x *SortDepartmentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortDepartmentListResp.ProtoReflect.Descriptor instead.
func (*SortDepartmentListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{46}
}

func (x *SortDepartmentListResp) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type SortOrganizationUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	UserID       string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	NextUserID   string `protobuf:"bytes,3,opt,name=nextUserID,proto3" json:"nextUserID"`
}

func (x *SortOrganizationUserListReq) Reset() {
	*x = SortOrganizationUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortOrganizationUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOrganizationUserListReq) ProtoMessage() {}

func (x *SortOrganizationUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOrganizationUserListReq.ProtoReflect.Descriptor instead.
func (*SortOrganizationUserListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{47}
}

func (x *SortOrganizationUserListReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *SortOrganizationUserListReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SortOrganizationUserListReq) GetNextUserID() string {
	if x != nil {
		return x.NextUserID
	}
	return ""
}

type SortOrganizationUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order int32 `protobuf:"varint,1,opt,name=order,proto3" json:"order"`
}

func (x *SortOrganizationUserListResp) Reset() {
	*x = SortOrganizationUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortOrganizationUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOrganizationUserListResp) ProtoMessage() {}

func (x *SortOrganizationUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOrganizationUserListResp.ProtoReflect.Descriptor instead.
func (*SortOrganizationUserListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{48}
}

func (x *SortOrganizationUserListResp) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type GetDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentIDs []string `protobuf:"bytes,1,rep,name=departmentIDs,proto3" json:"departmentIDs"`
}

func (x *GetDepartmentReq) Reset() {
	*x = GetDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentReq) ProtoMessage() {}

func (x *GetDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{49}
}

func (x *GetDepartmentReq) GetDepartmentIDs() []string {
	if x != nil {
		return x.DepartmentIDs
	}
	return nil
}

type GetDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Departments []*Department `protobuf:"bytes,1,rep,name=departments,proto3" json:"departments"`
}

func (x *GetDepartmentResp) Reset() {
	*x = GetDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentResp) ProtoMessage() {}

func (x *GetDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{50}
}

func (x *GetDepartmentResp) GetDepartments() []*Department {
	if x != nil {
		return x.Departments
	}
	return nil
}

type GetDepartmentByNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names"`
}

func (x *GetDepartmentByNameReq) Reset() {
	*x = GetDepartmentByNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentByNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentByNameReq) ProtoMessage() {}

func (x *GetDepartmentByNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentByNameReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentByNameReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{51}
}

func (x *GetDepartmentByNameReq) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type GetDepartmentByNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Departments []*Department `protobuf:"bytes,1,rep,name=departments,proto3" json:"departments"`
}

func (x *GetDepartmentByNameResp) Reset() {
	*x = GetDepartmentByNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentByNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentByNameResp) ProtoMessage() {}

func (x *GetDepartmentByNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentByNameResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentByNameResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{52}
}

func (x *GetDepartmentByNameResp) GetDepartments() []*Department {
	if x != nil {
		return x.Departments
	}
	return nil
}

type MoveUserDepartment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID              string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID        string `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
	CurrentDepartmentID string `protobuf:"bytes,3,opt,name=currentDepartmentID,proto3" json:"currentDepartmentID"`
}

func (x *MoveUserDepartment) Reset() {
	*x = MoveUserDepartment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveUserDepartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveUserDepartment) ProtoMessage() {}

func (x *MoveUserDepartment) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveUserDepartment.ProtoReflect.Descriptor instead.
func (*MoveUserDepartment) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{53}
}

func (x *MoveUserDepartment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MoveUserDepartment) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *MoveUserDepartment) GetCurrentDepartmentID() string {
	if x != nil {
		return x.CurrentDepartmentID
	}
	return ""
}

type MoveUserDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moves []*MoveUserDepartment `protobuf:"bytes,1,rep,name=moves,proto3" json:"moves"`
}

func (x *MoveUserDepartmentReq) Reset() {
	*x = MoveUserDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveUserDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveUserDepartmentReq) ProtoMessage() {}

func (x *MoveUserDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveUserDepartmentReq.ProtoReflect.Descriptor instead.
func (*MoveUserDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{54}
}

func (x *MoveUserDepartmentReq) GetMoves() []*MoveUserDepartment {
	if x != nil {
		return x.Moves
	}
	return nil
}

type MoveUserDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MoveUserDepartmentResp) Reset() {
	*x = MoveUserDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveUserDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveUserDepartmentResp) ProtoMessage() {}

func (x *MoveUserDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveUserDepartmentResp.ProtoReflect.Descriptor instead.
func (*MoveUserDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{55}
}

type AddUserToUngroupedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
}

func (x *AddUserToUngroupedReq) Reset() {
	*x = AddUserToUngroupedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToUngroupedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToUngroupedReq) ProtoMessage() {}

func (x *AddUserToUngroupedReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToUngroupedReq.ProtoReflect.Descriptor instead.
func (*AddUserToUngroupedReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{56}
}

func (x *AddUserToUngroupedReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type AddUserToUngroupedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ungrouped bool `protobuf:"varint,1,opt,name=ungrouped,proto3" json:"ungrouped"`
}

func (x *AddUserToUngroupedResp) Reset() {
	*x = AddUserToUngroupedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToUngroupedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToUngroupedResp) ProtoMessage() {}

func (x *AddUserToUngroupedResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToUngroupedResp.ProtoReflect.Descriptor instead.
func (*AddUserToUngroupedResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{57}
}

func (x *AddUserToUngroupedResp) GetUngrouped() bool {
	if x != nil {
		return x.Ungrouped
	}
	return false
}

type GetDepartmentParentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *GetDepartmentParentsReq) Reset() {
	*x = GetDepartmentParentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentParentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentParentsReq) ProtoMessage() {}

func (x *GetDepartmentParentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentParentsReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentParentsReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{58}
}

func (x *GetDepartmentParentsReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type GetDepartmentParentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Departments []*Department `protobuf:"bytes,1,rep,name=departments,proto3" json:"departments"`
}

func (x *GetDepartmentParentsResp) Reset() {
	*x = GetDepartmentParentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentParentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentParentsResp) ProtoMessage() {}

func (x *GetDepartmentParentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentParentsResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentParentsResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{59}
}

func (x *GetDepartmentParentsResp) GetDepartments() []*Department {
	if x != nil {
		return x.Departments
	}
	return nil
}

var File_organization_organization_proto protoreflect.FileDescriptor

var file_organization_organization_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x70, 0x75, 0x62, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x70, 0x75, 0x62, 0x2f, 0x73, 0x64, 0x6b, 0x77, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x67, 0x6f, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x0a, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x82, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x90, 0x01,
	0x0a, 0x14, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0xca, 0x02, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xd3, 0x02,
	0x0a, 0x14, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x37,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0xbc, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x3c, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x36, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x3b, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22,
	0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xeb, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1c,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73,
	0x22, 0x5e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x22, 0x9c, 0x03, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x3f, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x57, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x3a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0xd9, 0x02,
	0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0x60, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x92, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x6f,
	0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e,
	0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x46,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x67, 0x6f, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x41,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x52, 0x07, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x7d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x45, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x67,
	0x0a, 0x15, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6e,
	0x65, 0x78, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x16, 0x53, 0x6f, 0x72, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x1b, 0x53, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x34, 0x0a, 0x1c, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x22, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2e,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x60,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0b, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x82, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x5a, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x41,
	0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65,
	0x73, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x55, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x55, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x6e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x65, 0x64, 0x22, 0x3d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x96, 0x12, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x8a, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x36,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x81, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x33,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x78, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x33, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x12, 0x53, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x2f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x87, 0x01, 0x0a, 0x18, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x35, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x12, 0x4d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x2f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x75, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x55, 0x6e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x12, 0x2e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x55, 0x6e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x55, 0x6e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x78, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x30, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x7b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x44, 0x4b, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_organization_organization_proto_rawDescOnce sync.Once
	file_organization_organization_proto_rawDescData = file_organization_organization_proto_rawDesc
)

func file_organization_organization_proto_rawDescGZIP() []byte {
	file_organization_organization_proto_rawDescOnce.Do(func() {
		file_organization_organization_proto_rawDescData = protoimpl.X.CompressGZIP(file_organization_organization_proto_rawDescData)
	})
	return file_organization_organization_proto_rawDescData
}

var file_organization_organization_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_organization_organization_proto_goTypes = []interface{}{
	(*OrganizationInfo)(nil),                    // 0: OpenIMChat.organization.OrganizationInfo
	(*Department)(nil),                          // 1: OpenIMChat.organization.Department
	(*DepartmentNum)(nil),                       // 2: OpenIMChat.organization.DepartmentNum
	(*DepartmentMember)(nil),                    // 3: OpenIMChat.organization.DepartmentMember
	(*DepartmentMemberUser)(nil),                // 4: OpenIMChat.organization.DepartmentMemberUser
	(*MemberDepartment)(nil),                    // 5: OpenIMChat.organization.MemberDepartment
	(*DepartmentMemberFull)(nil),                // 6: OpenIMChat.organization.DepartmentMemberFull
	(*UserInDepartment)(nil),                    // 7: OpenIMChat.organization.UserInDepartment
	(*CreateDepartmentReq)(nil),                 // 8: OpenIMChat.organization.CreateDepartmentReq
	(*CreateDepartmentResp)(nil),                // 9: OpenIMChat.organization.CreateDepartmentResp
	(*UpdateDepartmentReq)(nil),                 // 10: OpenIMChat.organization.UpdateDepartmentReq
	(*UpdateDepartmentResp)(nil),                // 11: OpenIMChat.organization.UpdateDepartmentResp
	(*GetOrganizationDepartmentReq)(nil),        // 12: OpenIMChat.organization.GetOrganizationDepartmentReq
	(*DepartmentInfo)(nil),                      // 13: OpenIMChat.organization.DepartmentInfo
	(*GetOrganizationDepartmentResp)(nil),       // 14: OpenIMChat.organization.GetOrganizationDepartmentResp
	(*DeleteDepartmentReq)(nil),                 // 15: OpenIMChat.organization.DeleteDepartmentReq
	(*DeleteDepartmentResp)(nil),                // 16: OpenIMChat.organization.DeleteDepartmentResp
	(*GetDepartmentParentIDListReq)(nil),        // 17: OpenIMChat.organization.GetDepartmentParentIDListReq
	(*GetDepartmentParentIDListResp)(nil),       // 18: OpenIMChat.organization.GetDepartmentParentIDListResp
	(*CreateDepartmentMemberReq)(nil),           // 19: OpenIMChat.organization.CreateDepartmentMemberReq
	(*CreateDepartmentMemberResp)(nil),          // 20: OpenIMChat.organization.CreateDepartmentMemberResp
	(*GetUserInDepartmentReq)(nil),              // 21: OpenIMChat.organization.GetUserInDepartmentReq
	(*GetUserInDepartmentResp)(nil),             // 22: OpenIMChat.organization.GetUserInDepartmentResp
	(*UpdateUserInDepartmentReq)(nil),           // 23: OpenIMChat.organization.UpdateUserInDepartmentReq
	(*UpdateUserInDepartmentResp)(nil),          // 24: OpenIMChat.organization.UpdateUserInDepartmentResp
	(*DeleteUserInDepartmentReq)(nil),           // 25: OpenIMChat.organization.DeleteUserInDepartmentReq
	(*DeleteUserInDepartmentResp)(nil),          // 26: OpenIMChat.organization.DeleteUserInDepartmentResp
	(*GetDepartmentRelatedGroupIDListReq)(nil),  // 27: OpenIMChat.organization.GetDepartmentRelatedGroupIDListReq
	(*GetDepartmentRelatedGroupIDListResp)(nil), // 28: OpenIMChat.organization.GetDepartmentRelatedGroupIDListResp
	(*GetUserInOrganizationReq)(nil),            // 29: OpenIMChat.organization.GetUserInOrganizationReq
	(*GetUserInOrganizationResp)(nil),           // 30: OpenIMChat.organization.GetUserInOrganizationResp
	(*GetCompleteOrganizationReq)(nil),          // 31: OpenIMChat.organization.GetCompleteOrganizationReq
	(*CompleteOrganization)(nil),                // 32: OpenIMChat.organization.CompleteOrganization
	(*GetCompleteOrganizationResp)(nil),         // 33: OpenIMChat.organization.GetCompleteOrganizationResp
	(*GetUsersInDepartmentReq)(nil),             // 34: OpenIMChat.organization.GetUsersInDepartmentReq
	(*GetUsersInDepartmentResp)(nil),            // 35: OpenIMChat.organization.GetUsersInDepartmentResp
	(*SetOrganizationReq)(nil),                  // 36: OpenIMChat.organization.SetOrganizationReq
	(*SetOrganizationResp)(nil),                 // 37: OpenIMChat.organization.SetOrganizationResp
	(*GetOrganizationReq)(nil),                  // 38: OpenIMChat.organization.GetOrganizationReq
	(*GetOrganizationResp)(nil),                 // 39: OpenIMChat.organization.GetOrganizationResp
	(*GetSubDepartmentReq)(nil),                 // 40: OpenIMChat.organization.GetSubDepartmentReq
	(*MemberUserInfo)(nil),                      // 41: OpenIMChat.organization.MemberUserInfo
	(*GetSubDepartmentResp)(nil),                // 42: OpenIMChat.organization.GetSubDepartmentResp
	(*GetSearchDepartmentUserReq)(nil),          // 43: OpenIMChat.organization.GetSearchDepartmentUserReq
	(*GetSearchDepartmentUserResp)(nil),         // 44: OpenIMChat.organization.GetSearchDepartmentUserResp
	(*SortDepartmentListReq)(nil),               // 45: OpenIMChat.organization.SortDepartmentListReq
	(*SortDepartmentListResp)(nil),              // 46: OpenIMChat.organization.SortDepartmentListResp
	(*SortOrganizationUserListReq)(nil),         // 47: OpenIMChat.organization.SortOrganizationUserListReq
	(*SortOrganizationUserListResp)(nil),        // 48: OpenIMChat.organization.SortOrganizationUserListResp
	(*GetDepartmentReq)(nil),                    // 49: OpenIMChat.organization.GetDepartmentReq
	(*GetDepartmentResp)(nil),                   // 50: OpenIMChat.organization.GetDepartmentResp
	(*GetDepartmentByNameReq)(nil),              // 51: OpenIMChat.organization.GetDepartmentByNameReq
	(*GetDepartmentByNameResp)(nil),             // 52: OpenIMChat.organization.GetDepartmentByNameResp
	(*MoveUserDepartment)(nil),                  // 53: OpenIMChat.organization.MoveUserDepartment
	(*MoveUserDepartmentReq)(nil),               // 54: OpenIMChat.organization.MoveUserDepartmentReq
	(*MoveUserDepartmentResp)(nil),              // 55: OpenIMChat.organization.MoveUserDepartmentResp
	(*AddUserToUngroupedReq)(nil),               // 56: OpenIMChat.organization.AddUserToUngroupedReq
	(*AddUserToUngroupedResp)(nil),              // 57: OpenIMChat.organization.AddUserToUngroupedResp
	(*GetDepartmentParentsReq)(nil),             // 58: OpenIMChat.organization.GetDepartmentParentsReq
	(*GetDepartmentParentsResp)(nil),            // 59: OpenIMChat.organization.GetDepartmentParentsResp
	(*common.UserFullInfo)(nil),                 // 60: OpenIMChat.common.UserFullInfo
	(*wrapperspb.Int32Value)(nil),               // 61: OpenIMServer.protobuf.Int32Value
	(*wrapperspb.StringValue)(nil),              // 62: OpenIMServer.protobuf.StringValue
	(*wrapperspb.Int64Value)(nil),               // 63: OpenIMServer.protobuf.Int64Value
	(*sdkws.RequestPagination)(nil),             // 64: OpenIMServer.sdkws.RequestPagination
}
var file_organization_organization_proto_depIdxs = []int32{
	60, // 0: OpenIMChat.organization.DepartmentMemberUser.user:type_name -> OpenIMChat.common.UserFullInfo
	5,  // 1: OpenIMChat.organization.DepartmentMemberUser.members:type_name -> OpenIMChat.organization.MemberDepartment
	2,  // 2: OpenIMChat.organization.MemberDepartment.department:type_name -> OpenIMChat.organization.DepartmentNum
	2,  // 3: OpenIMChat.organization.DepartmentMemberFull.department:type_name -> OpenIMChat.organization.DepartmentNum
	60, // 4: OpenIMChat.organization.DepartmentMemberFull.user:type_name -> OpenIMChat.common.UserFullInfo
	3,  // 5: OpenIMChat.organization.UserInDepartment.departments:type_name -> OpenIMChat.organization.DepartmentMember
	61, // 6: OpenIMChat.organization.CreateDepartmentReq.order:type_name -> OpenIMServer.protobuf.Int32Value
	62, // 7: OpenIMChat.organization.UpdateDepartmentReq.faceURL:type_name -> OpenIMServer.protobuf.StringValue
	62, // 8: OpenIMChat.organization.UpdateDepartmentReq.name:type_name -> OpenIMServer.protobuf.StringValue
	62, // 9: OpenIMChat.organization.UpdateDepartmentReq.parentDepartmentID:type_name -> OpenIMServer.protobuf.StringValue
	61, // 10: OpenIMChat.organization.UpdateDepartmentReq.order:type_name -> OpenIMServer.protobuf.Int32Value
	2,  // 11: OpenIMChat.organization.DepartmentInfo.department:type_name -> OpenIMChat.organization.DepartmentNum
	13, // 12: OpenIMChat.organization.DepartmentInfo.subdepartments:type_name -> OpenIMChat.organization.DepartmentInfo
	13, // 13: OpenIMChat.organization.GetOrganizationDepartmentResp.departments:type_name -> OpenIMChat.organization.DepartmentInfo
	4,  // 14: OpenIMChat.organization.GetUserInDepartmentResp.users:type_name -> OpenIMChat.organization.DepartmentMemberUser
	62, // 15: OpenIMChat.organization.UpdateUserInDepartmentReq.position:type_name -> OpenIMServer.protobuf.StringValue
	62, // 16: OpenIMChat.organization.UpdateUserInDepartmentReq.station:type_name -> OpenIMServer.protobuf.StringValue
	61, // 17: OpenIMChat.organization.UpdateUserInDepartmentReq.order:type_name -> OpenIMServer.protobuf.Int32Value
	63, // 18: OpenIMChat.organization.UpdateUserInDepartmentReq.entryTime:type_name -> OpenIMServer.protobuf.Int64Value
	63, // 19: OpenIMChat.organization.UpdateUserInDepartmentReq.terminationTime:type_name -> OpenIMServer.protobuf.Int64Value
	60, // 20: OpenIMChat.organization.GetUserInOrganizationResp.users:type_name -> OpenIMChat.common.UserFullInfo
	32, // 21: OpenIMChat.organization.CompleteOrganization.list:type_name -> OpenIMChat.organization.CompleteOrganization
	32, // 22: OpenIMChat.organization.GetCompleteOrganizationResp.list:type_name -> OpenIMChat.organization.CompleteOrganization
	7,  // 23: OpenIMChat.organization.GetUsersInDepartmentResp.list:type_name -> OpenIMChat.organization.UserInDepartment
	62, // 24: OpenIMChat.organization.SetOrganizationReq.logoURL:type_name -> OpenIMServer.protobuf.StringValue
	62, // 25: OpenIMChat.organization.SetOrganizationReq.name:type_name -> OpenIMServer.protobuf.StringValue
	62, // 26: OpenIMChat.organization.SetOrganizationReq.homepage:type_name -> OpenIMServer.protobuf.StringValue
	62, // 27: OpenIMChat.organization.SetOrganizationReq.introduction:type_name -> OpenIMServer.protobuf.StringValue
	3,  // 28: OpenIMChat.organization.MemberUserInfo.member:type_name -> OpenIMChat.organization.DepartmentMember
	60, // 29: OpenIMChat.organization.MemberUserInfo.user:type_name -> OpenIMChat.common.UserFullInfo
	2,  // 30: OpenIMChat.organization.GetSubDepartmentResp.departments:type_name -> OpenIMChat.organization.DepartmentNum
	41, // 31: OpenIMChat.organization.GetSubDepartmentResp.members:type_name -> OpenIMChat.organization.MemberUserInfo
	2,  // 32: OpenIMChat.organization.GetSubDepartmentResp.parents:type_name -> OpenIMChat.organization.DepartmentNum
	2,  // 33: OpenIMChat.organization.GetSubDepartmentResp.current:type_name -> OpenIMChat.organization.DepartmentNum
	64, // 34: OpenIMChat.organization.GetSearchDepartmentUserReq.pagination:type_name -> OpenIMServer.sdkws.RequestPagination
	4,  // 35: OpenIMChat.organization.GetSearchDepartmentUserResp.users:type_name -> OpenIMChat.organization.DepartmentMemberUser
	1,  // 36: OpenIMChat.organization.GetDepartmentResp.departments:type_name -> OpenIMChat.organization.Department
	1,  // 37: OpenIMChat.organization.GetDepartmentByNameResp.departments:type_name -> OpenIMChat.organization.Department
	53, // 38: OpenIMChat.organization.MoveUserDepartmentReq.moves:type_name -> OpenIMChat.organization.MoveUserDepartment
	1,  // 39: OpenIMChat.organization.GetDepartmentParentsResp.departments:type_name -> OpenIMChat.organization.Department
	8,  // 40: OpenIMChat.organization.organization.CreateDepartment:input_type -> OpenIMChat.organization.CreateDepartmentReq
	10, // 41: OpenIMChat.organization.organization.UpdateDepartment:input_type -> OpenIMChat.organization.UpdateDepartmentReq
	12, // 42: OpenIMChat.organization.organization.GetOrganizationDepartment:input_type -> OpenIMChat.organization.GetOrganizationDepartmentReq
	15, // 43: OpenIMChat.organization.organization.DeleteDepartment:input_type -> OpenIMChat.organization.DeleteDepartmentReq
	49, // 44: OpenIMChat.organization.organization.GetDepartment:input_type -> OpenIMChat.organization.GetDepartmentReq
	19, // 45: OpenIMChat.organization.organization.CreateDepartmentMember:input_type -> OpenIMChat.organization.CreateDepartmentMemberReq
	21, // 46: OpenIMChat.organization.organization.GetUserInDepartment:input_type -> OpenIMChat.organization.GetUserInDepartmentReq
	25, // 47: OpenIMChat.organization.organization.DeleteUserInDepartment:input_type -> OpenIMChat.organization.DeleteUserInDepartmentReq
	23, // 48: OpenIMChat.organization.organization.UpdateUserInDepartment:input_type -> OpenIMChat.organization.UpdateUserInDepartmentReq
	36, // 49: OpenIMChat.organization.organization.SetOrganization:input_type -> OpenIMChat.organization.SetOrganizationReq
	38, // 50: OpenIMChat.organization.organization.GetOrganization:input_type -> OpenIMChat.organization.GetOrganizationReq
	40, // 51: OpenIMChat.organization.organization.GetSubDepartment:input_type -> OpenIMChat.organization.GetSubDepartmentReq
	43, // 52: OpenIMChat.organization.organization.GetSearchDepartmentUser:input_type -> OpenIMChat.organization.GetSearchDepartmentUserReq
	45, // 53: OpenIMChat.organization.organization.SortDepartmentList:input_type -> OpenIMChat.organization.SortDepartmentListReq
	47, // 54: OpenIMChat.organization.organization.SortOrganizationUserList:input_type -> OpenIMChat.organization.SortOrganizationUserListReq
	54, // 55: OpenIMChat.organization.organization.MoveUserDepartment:input_type -> OpenIMChat.organization.MoveUserDepartmentReq
	56, // 56: OpenIMChat.organization.organization.AddUserToUngrouped:input_type -> OpenIMChat.organization.AddUserToUngroupedReq
	51, // 57: OpenIMChat.organization.organization.GetDepartmentByName:input_type -> OpenIMChat.organization.GetDepartmentByNameReq
	58, // 58: OpenIMChat.organization.organization.GetDepartmentParents:input_type -> OpenIMChat.organization.GetDepartmentParentsReq
	9,  // 59: OpenIMChat.organization.organization.CreateDepartment:output_type -> OpenIMChat.organization.CreateDepartmentResp
	11, // 60: OpenIMChat.organization.organization.UpdateDepartment:output_type -> OpenIMChat.organization.UpdateDepartmentResp
	14, // 61: OpenIMChat.organization.organization.GetOrganizationDepartment:output_type -> OpenIMChat.organization.GetOrganizationDepartmentResp
	16, // 62: OpenIMChat.organization.organization.DeleteDepartment:output_type -> OpenIMChat.organization.DeleteDepartmentResp
	50, // 63: OpenIMChat.organization.organization.GetDepartment:output_type -> OpenIMChat.organization.GetDepartmentResp
	20, // 64: OpenIMChat.organization.organization.CreateDepartmentMember:output_type -> OpenIMChat.organization.CreateDepartmentMemberResp
	22, // 65: OpenIMChat.organization.organization.GetUserInDepartment:output_type -> OpenIMChat.organization.GetUserInDepartmentResp
	26, // 66: OpenIMChat.organization.organization.DeleteUserInDepartment:output_type -> OpenIMChat.organization.DeleteUserInDepartmentResp
	24, // 67: OpenIMChat.organization.organization.UpdateUserInDepartment:output_type -> OpenIMChat.organization.UpdateUserInDepartmentResp
	37, // 68: OpenIMChat.organization.organization.SetOrganization:output_type -> OpenIMChat.organization.SetOrganizationResp
	39, // 69: OpenIMChat.organization.organization.GetOrganization:output_type -> OpenIMChat.organization.GetOrganizationResp
	42, // 70: OpenIMChat.organization.organization.GetSubDepartment:output_type -> OpenIMChat.organization.GetSubDepartmentResp
	44, // 71: OpenIMChat.organization.organization.GetSearchDepartmentUser:output_type -> OpenIMChat.organization.GetSearchDepartmentUserResp
	46, // 72: OpenIMChat.organization.organization.SortDepartmentList:output_type -> OpenIMChat.organization.SortDepartmentListResp
	48, // 73: OpenIMChat.organization.organization.SortOrganizationUserList:output_type -> OpenIMChat.organization.SortOrganizationUserListResp
	55, // 74: OpenIMChat.organization.organization.MoveUserDepartment:output_type -> OpenIMChat.organization.MoveUserDepartmentResp
	57, // 75: OpenIMChat.organization.organization.AddUserToUngrouped:output_type -> OpenIMChat.organization.AddUserToUngroupedResp
	52, // 76: OpenIMChat.organization.organization.GetDepartmentByName:output_type -> OpenIMChat.organization.GetDepartmentByNameResp
	59, // 77: OpenIMChat.organization.organization.GetDepartmentParents:output_type -> OpenIMChat.organization.GetDepartmentParentsResp
	59, // [59:78] is the sub-list for method output_type
	40, // [40:59] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_organization_organization_proto_init() }
func file_organization_organization_proto_init() {
	if File_organization_organization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_organization_organization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Department); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentMemberUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberDepartment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentMemberFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInDepartment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentParentIDListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentParentIDListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentRelatedGroupIDListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentRelatedGroupIDListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompleteOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompleteOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchDepartmentUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchDepartmentUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortDepartmentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortDepartmentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortOrganizationUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortOrganizationUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentByNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentByNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveUserDepartment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveUserDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveUserDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToUngroupedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToUngroupedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentParentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentParentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_organization_organization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_organization_organization_proto_goTypes,
		DependencyIndexes: file_organization_organization_proto_depIdxs,
		MessageInfos:      file_organization_organization_proto_msgTypes,
	}.Build()
	File_organization_organization_proto = out.File
	file_organization_organization_proto_rawDesc = nil
	file_organization_organization_proto_goTypes = nil
	file_organization_organization_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrganizationClient is the client API for Organization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrganizationClient interface {
	CreateDepartment(ctx context.Context, in *CreateDepartmentReq, opts ...grpc.CallOption) (*CreateDepartmentResp, error)
	UpdateDepartment(ctx context.Context, in *UpdateDepartmentReq, opts ...grpc.CallOption) (*UpdateDepartmentResp, error)
	GetOrganizationDepartment(ctx context.Context, in *GetOrganizationDepartmentReq, opts ...grpc.CallOption) (*GetOrganizationDepartmentResp, error)
	DeleteDepartment(ctx context.Context, in *DeleteDepartmentReq, opts ...grpc.CallOption) (*DeleteDepartmentResp, error)
	GetDepartment(ctx context.Context, in *GetDepartmentReq, opts ...grpc.CallOption) (*GetDepartmentResp, error)
	CreateDepartmentMember(ctx context.Context, in *CreateDepartmentMemberReq, opts ...grpc.CallOption) (*CreateDepartmentMemberResp, error)
	GetUserInDepartment(ctx context.Context, in *GetUserInDepartmentReq, opts ...grpc.CallOption) (*GetUserInDepartmentResp, error)
	DeleteUserInDepartment(ctx context.Context, in *DeleteUserInDepartmentReq, opts ...grpc.CallOption) (*DeleteUserInDepartmentResp, error)
	UpdateUserInDepartment(ctx context.Context, in *UpdateUserInDepartmentReq, opts ...grpc.CallOption) (*UpdateUserInDepartmentResp, error)
	SetOrganization(ctx context.Context, in *SetOrganizationReq, opts ...grpc.CallOption) (*SetOrganizationResp, error)
	GetOrganization(ctx context.Context, in *GetOrganizationReq, opts ...grpc.CallOption) (*GetOrganizationResp, error)
	GetSubDepartment(ctx context.Context, in *GetSubDepartmentReq, opts ...grpc.CallOption) (*GetSubDepartmentResp, error)
	GetSearchDepartmentUser(ctx context.Context, in *GetSearchDepartmentUserReq, opts ...grpc.CallOption) (*GetSearchDepartmentUserResp, error)
	SortDepartmentList(ctx context.Context, in *SortDepartmentListReq, opts ...grpc.CallOption) (*SortDepartmentListResp, error)
	SortOrganizationUserList(ctx context.Context, in *SortOrganizationUserListReq, opts ...grpc.CallOption) (*SortOrganizationUserListResp, error)
	MoveUserDepartment(ctx context.Context, in *MoveUserDepartmentReq, opts ...grpc.CallOption) (*MoveUserDepartmentResp, error)
	AddUserToUngrouped(ctx context.Context, in *AddUserToUngroupedReq, opts ...grpc.CallOption) (*AddUserToUngroupedResp, error)
	GetDepartmentByName(ctx context.Context, in *GetDepartmentByNameReq, opts ...grpc.CallOption) (*GetDepartmentByNameResp, error)
	GetDepartmentParents(ctx context.Context, in *GetDepartmentParentsReq, opts ...grpc.CallOption) (*GetDepartmentParentsResp, error)
}

type organizationClient struct {
	cc grpc.ClientConnInterface
}

func NewOrganizationClient(cc grpc.ClientConnInterface) OrganizationClient {
	return &organizationClient{cc}
}

func (c *organizationClient) CreateDepartment(ctx context.Context, in *CreateDepartmentReq, opts ...grpc.CallOption) (*CreateDepartmentResp, error) {
	out := new(CreateDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/CreateDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateDepartment(ctx context.Context, in *UpdateDepartmentReq, opts ...grpc.CallOption) (*UpdateDepartmentResp, error) {
	out := new(UpdateDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/UpdateDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetOrganizationDepartment(ctx context.Context, in *GetOrganizationDepartmentReq, opts ...grpc.CallOption) (*GetOrganizationDepartmentResp, error) {
	out := new(GetOrganizationDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetOrganizationDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteDepartment(ctx context.Context, in *DeleteDepartmentReq, opts ...grpc.CallOption) (*DeleteDepartmentResp, error) {
	out := new(DeleteDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/DeleteDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetDepartment(ctx context.Context, in *GetDepartmentReq, opts ...grpc.CallOption) (*GetDepartmentResp, error) {
	out := new(GetDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateDepartmentMember(ctx context.Context, in *CreateDepartmentMemberReq, opts ...grpc.CallOption) (*CreateDepartmentMemberResp, error) {
	out := new(CreateDepartmentMemberResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/CreateDepartmentMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetUserInDepartment(ctx context.Context, in *GetUserInDepartmentReq, opts ...grpc.CallOption) (*GetUserInDepartmentResp, error) {
	out := new(GetUserInDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetUserInDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteUserInDepartment(ctx context.Context, in *DeleteUserInDepartmentReq, opts ...grpc.CallOption) (*DeleteUserInDepartmentResp, error) {
	out := new(DeleteUserInDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/DeleteUserInDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateUserInDepartment(ctx context.Context, in *UpdateUserInDepartmentReq, opts ...grpc.CallOption) (*UpdateUserInDepartmentResp, error) {
	out := new(UpdateUserInDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/UpdateUserInDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) SetOrganization(ctx context.Context, in *SetOrganizationReq, opts ...grpc.CallOption) (*SetOrganizationResp, error) {
	out := new(SetOrganizationResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/SetOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetOrganization(ctx context.Context, in *GetOrganizationReq, opts ...grpc.CallOption) (*GetOrganizationResp, error) {
	out := new(GetOrganizationResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetSubDepartment(ctx context.Context, in *GetSubDepartmentReq, opts ...grpc.CallOption) (*GetSubDepartmentResp, error) {
	out := new(GetSubDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetSubDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetSearchDepartmentUser(ctx context.Context, in *GetSearchDepartmentUserReq, opts ...grpc.CallOption) (*GetSearchDepartmentUserResp, error) {
	out := new(GetSearchDepartmentUserResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetSearchDepartmentUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) SortDepartmentList(ctx context.Context, in *SortDepartmentListReq, opts ...grpc.CallOption) (*SortDepartmentListResp, error) {
	out := new(SortDepartmentListResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/SortDepartmentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) SortOrganizationUserList(ctx context.Context, in *SortOrganizationUserListReq, opts ...grpc.CallOption) (*SortOrganizationUserListResp, error) {
	out := new(SortOrganizationUserListResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/SortOrganizationUserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) MoveUserDepartment(ctx context.Context, in *MoveUserDepartmentReq, opts ...grpc.CallOption) (*MoveUserDepartmentResp, error) {
	out := new(MoveUserDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/MoveUserDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) AddUserToUngrouped(ctx context.Context, in *AddUserToUngroupedReq, opts ...grpc.CallOption) (*AddUserToUngroupedResp, error) {
	out := new(AddUserToUngroupedResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/AddUserToUngrouped", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetDepartmentByName(ctx context.Context, in *GetDepartmentByNameReq, opts ...grpc.CallOption) (*GetDepartmentByNameResp, error) {
	out := new(GetDepartmentByNameResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetDepartmentByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetDepartmentParents(ctx context.Context, in *GetDepartmentParentsReq, opts ...grpc.CallOption) (*GetDepartmentParentsResp, error) {
	out := new(GetDepartmentParentsResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetDepartmentParents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrganizationServer is the server API for Organization service.
type OrganizationServer interface {
	CreateDepartment(context.Context, *CreateDepartmentReq) (*CreateDepartmentResp, error)
	UpdateDepartment(context.Context, *UpdateDepartmentReq) (*UpdateDepartmentResp, error)
	GetOrganizationDepartment(context.Context, *GetOrganizationDepartmentReq) (*GetOrganizationDepartmentResp, error)
	DeleteDepartment(context.Context, *DeleteDepartmentReq) (*DeleteDepartmentResp, error)
	GetDepartment(context.Context, *GetDepartmentReq) (*GetDepartmentResp, error)
	CreateDepartmentMember(context.Context, *CreateDepartmentMemberReq) (*CreateDepartmentMemberResp, error)
	GetUserInDepartment(context.Context, *GetUserInDepartmentReq) (*GetUserInDepartmentResp, error)
	DeleteUserInDepartment(context.Context, *DeleteUserInDepartmentReq) (*DeleteUserInDepartmentResp, error)
	UpdateUserInDepartment(context.Context, *UpdateUserInDepartmentReq) (*UpdateUserInDepartmentResp, error)
	SetOrganization(context.Context, *SetOrganizationReq) (*SetOrganizationResp, error)
	GetOrganization(context.Context, *GetOrganizationReq) (*GetOrganizationResp, error)
	GetSubDepartment(context.Context, *GetSubDepartmentReq) (*GetSubDepartmentResp, error)
	GetSearchDepartmentUser(context.Context, *GetSearchDepartmentUserReq) (*GetSearchDepartmentUserResp, error)
	SortDepartmentList(context.Context, *SortDepartmentListReq) (*SortDepartmentListResp, error)
	SortOrganizationUserList(context.Context, *SortOrganizationUserListReq) (*SortOrganizationUserListResp, error)
	MoveUserDepartment(context.Context, *MoveUserDepartmentReq) (*MoveUserDepartmentResp, error)
	AddUserToUngrouped(context.Context, *AddUserToUngroupedReq) (*AddUserToUngroupedResp, error)
	GetDepartmentByName(context.Context, *GetDepartmentByNameReq) (*GetDepartmentByNameResp, error)
	GetDepartmentParents(context.Context, *GetDepartmentParentsReq) (*GetDepartmentParentsResp, error)
}

// UnimplementedOrganizationServer can be embedded to have forward compatible implementations.
type UnimplementedOrganizationServer struct {
}

func (*UnimplementedOrganizationServer) CreateDepartment(context.Context, *CreateDepartmentReq) (*CreateDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDepartment not implemented")
}
func (*UnimplementedOrganizationServer) UpdateDepartment(context.Context, *UpdateDepartmentReq) (*UpdateDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetOrganizationDepartment(context.Context, *GetOrganizationDepartmentReq) (*GetOrganizationDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationDepartment not implemented")
}
func (*UnimplementedOrganizationServer) DeleteDepartment(context.Context, *DeleteDepartmentReq) (*DeleteDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetDepartment(context.Context, *GetDepartmentReq) (*GetDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepartment not implemented")
}
func (*UnimplementedOrganizationServer) CreateDepartmentMember(context.Context, *CreateDepartmentMemberReq) (*CreateDepartmentMemberResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDepartmentMember not implemented")
}
func (*UnimplementedOrganizationServer) GetUserInDepartment(context.Context, *GetUserInDepartmentReq) (*GetUserInDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInDepartment not implemented")
}
func (*UnimplementedOrganizationServer) DeleteUserInDepartment(context.Context, *DeleteUserInDepartmentReq) (*DeleteUserInDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserInDepartment not implemented")
}
func (*UnimplementedOrganizationServer) UpdateUserInDepartment(context.Context, *UpdateUserInDepartmentReq) (*UpdateUserInDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserInDepartment not implemented")
}
func (*UnimplementedOrganizationServer) SetOrganization(context.Context, *SetOrganizationReq) (*SetOrganizationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOrganization not implemented")
}
func (*UnimplementedOrganizationServer) GetOrganization(context.Context, *GetOrganizationReq) (*GetOrganizationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganization not implemented")
}
func (*UnimplementedOrganizationServer) GetSubDepartment(context.Context, *GetSubDepartmentReq) (*GetSubDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetSearchDepartmentUser(context.Context, *GetSearchDepartmentUserReq) (*GetSearchDepartmentUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSearchDepartmentUser not implemented")
}
func (*UnimplementedOrganizationServer) SortDepartmentList(context.Context, *SortDepartmentListReq) (*SortDepartmentListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortDepartmentList not implemented")
}
func (*UnimplementedOrganizationServer) SortOrganizationUserList(context.Context, *SortOrganizationUserListReq) (*SortOrganizationUserListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortOrganizationUserList not implemented")
}
func (*UnimplementedOrganizationServer) MoveUserDepartment(context.Context, *MoveUserDepartmentReq) (*MoveUserDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveUserDepartment not implemented")
}
func (*UnimplementedOrganizationServer) AddUserToUngrouped(context.Context, *AddUserToUngroupedReq) (*AddUserToUngroupedResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserToUngrouped not implemented")
}
func (*UnimplementedOrganizationServer) GetDepartmentByName(context.Context, *GetDepartmentByNameReq) (*GetDepartmentByNameResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepartmentByName not implemented")
}
func (*UnimplementedOrganizationServer) GetDepartmentParents(context.Context, *GetDepartmentParentsReq) (*GetDepartmentParentsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepartmentParents not implemented")
}

func RegisterOrganizationServer(s *grpc.Server, srv OrganizationServer) {
	s.RegisterService(&_Organization_serviceDesc, srv)
}

func _Organization_CreateDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/CreateDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateDepartment(ctx, req.(*CreateDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/UpdateDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateDepartment(ctx, req.(*UpdateDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetOrganizationDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetOrganizationDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetOrganizationDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetOrganizationDepartment(ctx, req.(*GetOrganizationDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/DeleteDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteDepartment(ctx, req.(*DeleteDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetDepartment(ctx, req.(*GetDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateDepartmentMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDepartmentMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateDepartmentMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/CreateDepartmentMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateDepartmentMember(ctx, req.(*CreateDepartmentMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetUserInDepartment(ctx, req.(*GetUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/DeleteUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteUserInDepartment(ctx, req.(*DeleteUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/UpdateUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateUserInDepartment(ctx, req.(*UpdateUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_SetOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetOrganizationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).SetOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/SetOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).SetOrganization(ctx, req.(*SetOrganizationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetOrganization(ctx, req.(*GetOrganizationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetSubDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetSubDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetSubDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetSubDepartment(ctx, req.(*GetSubDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetSearchDepartmentUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSearchDepartmentUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetSearchDepartmentUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetSearchDepartmentUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetSearchDepartmentUser(ctx, req.(*GetSearchDepartmentUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_SortDepartmentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortDepartmentListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).SortDepartmentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/SortDepartmentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).SortDepartmentList(ctx, req.(*SortDepartmentListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_SortOrganizationUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortOrganizationUserListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).SortOrganizationUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/SortOrganizationUserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).SortOrganizationUserList(ctx, req.(*SortOrganizationUserListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_MoveUserDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveUserDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).MoveUserDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/MoveUserDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).MoveUserDepartment(ctx, req.(*MoveUserDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_AddUserToUngrouped_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserToUngroupedReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).AddUserToUngrouped(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/AddUserToUngrouped",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).AddUserToUngrouped(ctx, req.(*AddUserToUngroupedReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetDepartmentByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentByNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetDepartmentByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetDepartmentByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetDepartmentByName(ctx, req.(*GetDepartmentByNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetDepartmentParents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentParentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetDepartmentParents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetDepartmentParents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetDepartmentParents(ctx, req.(*GetDepartmentParentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Organization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMChat.organization.organization",
	HandlerType: (*OrganizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDepartment",
			Handler:    _Organization_CreateDepartment_Handler,
		},
		{
			MethodName: "UpdateDepartment",
			Handler:    _Organization_UpdateDepartment_Handler,
		},
		{
			MethodName: "GetOrganizationDepartment",
			Handler:    _Organization_GetOrganizationDepartment_Handler,
		},
		{
			MethodName: "DeleteDepartment",
			Handler:    _Organization_DeleteDepartment_Handler,
		},
		{
			MethodName: "GetDepartment",
			Handler:    _Organization_GetDepartment_Handler,
		},
		{
			MethodName: "CreateDepartmentMember",
			Handler:    _Organization_CreateDepartmentMember_Handler,
		},
		{
			MethodName: "GetUserInDepartment",
			Handler:    _Organization_GetUserInDepartment_Handler,
		},
		{
			MethodName: "DeleteUserInDepartment",
			Handler:    _Organization_DeleteUserInDepartment_Handler,
		},
		{
			MethodName: "UpdateUserInDepartment",
			Handler:    _Organization_UpdateUserInDepartment_Handler,
		},
		{
			MethodName: "SetOrganization",
			Handler:    _Organization_SetOrganization_Handler,
		},
		{
			MethodName: "GetOrganization",
			Handler:    _Organization_GetOrganization_Handler,
		},
		{
			MethodName: "GetSubDepartment",
			Handler:    _Organization_GetSubDepartment_Handler,
		},
		{
			MethodName: "GetSearchDepartmentUser",
			Handler:    _Organization_GetSearchDepartmentUser_Handler,
		},
		{
			MethodName: "SortDepartmentList",
			Handler:    _Organization_SortDepartmentList_Handler,
		},
		{
			MethodName: "SortOrganizationUserList",
			Handler:    _Organization_SortOrganizationUserList_Handler,
		},
		{
			MethodName: "MoveUserDepartment",
			Handler:    _Organization_MoveUserDepartment_Handler,
		},
		{
			MethodName: "AddUserToUngrouped",
			Handler:    _Organization_AddUserToUngrouped_Handler,
		},
		{
			MethodName: "GetDepartmentByName",
			Handler:    _Organization_GetDepartmentByName_Handler,
		},
		{
			MethodName: "GetDepartmentParents",
			Handler:    _Organization_GetDepartmentParents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization/organization.proto",
}
